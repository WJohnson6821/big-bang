{{- if .Values.fluentbit.enabled }}
{{- include "values-secret" (dict "root" $ "package" .Values.fluentbit "name" "fluentbit" "defaults" (include "bigbang.defaults.fluentbit" .)) }}
{{- end }}

{{- define "bigbang.defaults.fluentbit" -}}
{{- $disableDefault := dig "additionalOutputs" "disableDefault" false .Values.fluentbit }}

{{- if and (not $disableDefault) .Values.logging.enabled }}
elasticsearch:
  name: "logging-ek"

env:
  - name: FLUENT_ELASTICSEARCH_PASSWORD
    valueFrom:
      secretKeyRef:
        name: logging-ek-es-elastic-user
        key: elastic

extraVolumes:
  - hostPath:
      path: /var/log/flb-storage/
      type: DirectoryOrCreate
    name: flb-storage
  - secret:
      secretName: logging-ek-es-http-certs-public
    name: elasticsearch-certs

extraVolumeMounts:
  - mountPath: /var/log/flb-storage/
    name: flb-storage
  - mountPath: /etc/elasticsearch/certs/
    name: elasticsearch-certs

config:
  outputs: |
    [OUTPUT]
        Name es
        Match kube.*
        # -- Pointing to Elasticsearch service installed by ECK, based off EK name "logging-ek", update elasticsearch.name above to update.
        Host {{ .Values.elasticsearch.name }}-es-http
        HTTP_User elastic
        HTTP_Passwd ${FLUENT_ELASTICSEARCH_PASSWORD}
        Logstash_Format On
        Retry_Limit False
        Replace_Dots On
        tls On
        tls.verify On
        tls.ca_file /etc/elasticsearch/certs/ca.crt
        storage.total_limit_size {{ .Values.storage.total_limit_size }}

    [OUTPUT]
        Name es
        Match host.*
        # -- Pointing to Elasticsearch service installed by ECK, based off EK name "logging-ek", update elasticsearch.name above to update.
        Host {{ .Values.elasticsearch.name }}-es-http
        HTTP_User elastic
        HTTP_Passwd ${FLUENT_ELASTICSEARCH_PASSWORD}
        Logstash_Format On
        Logstash_Prefix node
        Retry_Limit False
        tls On
        tls.verify On
        tls.ca_file /etc/elasticsearch/certs/ca.crt
        storage.total_limit_size {{ .Values.storage.total_limit_size }}
{{- end }}

imagePullSecrets:
  - name: private-registry

image:
  pullPolicy: {{ .Values.imagePullPolicy }}

networkPolicies:
  enabled: {{ .Values.networkPolicies.enabled }}
  controlPlaneCidr: {{ .Values.networkPolicies.controlPlaneCidr }}

istio:
  enabled: {{ .Values.istio.enabled }}

{{- if .Values.monitoring.enabled }}
serviceMonitor:
  enabled: true
  namespace: monitoring
  interval: 10s
  scrapeTimeout: 10s
  selector:
    prometheus: monitoring-monitoring-kube-prometheus

dashboards:
  enabled: true
  labelKey: grafana_dashboard
  namespace: monitoring
{{- end }}

{{- if .Values.istio.enabled }}
podAnnotations:
  {{ include "istioAnnotation" . }}
{{- end }}

openshift: {{ .Values.openshift }}

{{- if .Values.openshift }}
podSecurityContext:
  seLinuxOptions:
    type: "spc_t"
{{- end }}
{{- end -}}
